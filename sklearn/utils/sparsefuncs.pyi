from numpy import ndarray
from numpy.typing import NDArray, ArrayLike

# Authors: Manoj Kumar
#          Thomas Unterthiner
#          Giorgio Patrini
#
# License: BSD 3 clause
import scipy.sparse as sp
import numpy as np

from .sparsefuncs_fast import (
    csr_mean_variance_axis0 as _csr_mean_var_axis0,
    csc_mean_variance_axis0 as _csc_mean_var_axis0,
    incr_mean_variance_axis0 as _incr_mean_var_axis0,
)
from ..utils.validation import _check_sample_weight
from scipy.sparse._csc import csc_matrix
from scipy.sparse._csr import csr_matrix
from typing import Optional, Tuple, Union

def _raise_typeerror(X): ...
def _raise_error_wrong_axis(axis: int) -> None: ...
def inplace_csr_column_scale(X: NDArray, scale: NDArray): ...
def inplace_csr_row_scale(X: NDArray, scale: NDArray): ...
def mean_variance_axis(
    X: NDArray,
    axis: Literal[0, 1],
    weights: NDArray | None = None,
    return_sum_weights: bool = False,
) -> tuple[np.ndarray, np.ndarray, np.ndarray]: ...
def incr_mean_variance_axis(
    X, *, axis: Literal[0, 1], last_mean: NDArray, last_var: NDArray, last_n: float | NDArray, weights: NDArray | None = None
) -> tuple[NDArray, NDArray, np.ndarray]: ...
def inplace_column_scale(X: NDArray, scale: NDArray): ...
def inplace_row_scale(X: NDArray, scale: NDArray): ...
def inplace_swap_row_csc(X: NDArray, m: int, n: int): ...
def inplace_swap_row_csr(X: NDArray, m: int, n: int): ...
def inplace_swap_row(X: NDArray, m: int, n: int): ...
def inplace_swap_column(X: NDArray, m: int, n: int): ...
def _minor_reduce(X, ufunc): ...
def _min_or_max_axis(X, axis, min_or_max): ...
def _sparse_min_or_max(X, axis, min_or_max): ...
def _sparse_min_max(X, axis): ...
def _sparse_nan_min_max(X, axis): ...
def min_max_axis(X: NDArray, axis: Literal[0, 1], ignore_nan: bool = False) -> tuple[NDArray, NDArray]: ...
def count_nonzero(
    X: NDArray,
    axis: Literal[0, 1] | None = None,
    sample_weight: ArrayLike | None = None,
): ...
def _get_median(data, n_zeros): ...
def _get_elem_at_rank(rank, data, n_negative, n_zeros): ...
def csc_median_axis_0(X: NDArray) -> NDArray: ...
